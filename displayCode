module display (
  input  logic [3:0] in, // O nibble que representa entrada.    
  output logic [6:0] out // Resposta dos 7 segmentos. 
);
	// Mapeamento das entradas em BCD.
    // Os segmentos são mapeados como a, b, c, d, e, f, g.
    // O valor 1 representa o respectivo segmento aceso.
    
    always_comb begin
        case (in)
            4'b0000: out = 7'b1111110; // 0: a, b, c, d, e, f.
            4'b0001: out = 7'b0110000; // 1: b, c.
            4'b0010: out = 7'b1101101; // 2: a, b, d, e, g.
            4'b0011: out = 7'b1111001; // 3: a, b, c, d, g.
            4'b0100: out = 7'b0110011; // 4: b, c, f, g.
            4'b0101: out = 7'b1011011; // 5: a, c, d, f, g.
            4'b0110: out = 7'b1011111; // 6: a, c, d, e, f, g.
            4'b0111: out = 7'b1110000; // 7: a, b, c.
            4'b1000: out = 7'b1111111; // 8: a, b, c, d, e, f, g.
            4'b1001: out = 7'b1111011; // 9: a, b, c, d, f, g.
            default: out = 7'b0000000; // Para caso a entrada seja inválida.
        endcase
    end
endmodule
